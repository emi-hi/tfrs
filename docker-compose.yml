version: "3"

services:
  db:
    platform: linux/amd64
    image: postgres
    container_name: tfrs_db
    environment:
      POSTGRES_DB: tfrs
      POSTGRES_USER: tfrs
      POSTGRES_PASSWORD: development_only
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  django:
    platform: linux/amd64
    environment:
      - DATABASE_NAME=tfrs
      - DATABASE_USER=tfrs
      - DATABASE_PASSWORD=development_only
      - DATABASE_ENGINE=postgresql
      - DATABASE_SERVICE_NAME=postgresql
      - POSTGRESQL_SERVICE_HOST=db
      - POSTGRESQL_SERVICE_PORT=5432
      - RABBITMQ_VHOST=/tfrs
      - RABBITMQ_USER=rabbitmq
      - RABBITMQ_PASSWORD=rabbitmq
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
      - KEYCLOAK_ENABLED=True
      - KEYCLOAK_AUDIENCE=tfrs-on-gold-4308
      - KEYCLOAK_CLIENT_ID=tfrs-on-gold-4308
      - KEYCLOAK_REALM=standard
      - KEYCLOAK_ISSUER=https://dev.loginproxy.gov.bc.ca/auth/realms/standard
      - KEYCLOAK_CERTS_URL=https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/certs
      - KEYCLOAK_SA_BASEURL=https://dev.loginproxy.gov.bc.ca
      - KEYCLOAK_SA_REALM=tfrs-on-gold-4308
      - KEYCLOAK_SA_CLIENT_ID=tfrs-app-sa
      - KEYCLOAK_SA_CLIENT_SECRET=06dc71d6-1800-4f5d-b7b3-4c4fda226599
      - DOCUMENTS_API_ENABLED=True
      - SMTP_SERVER_HOST=smtplogger
      - SMTP_SERVER_PORT=2500
      - EMAIL_SENDING_ENABLED=True
      - EMAIL_FROM_ADDRESS=tfrs-dev@test.local
      - FUEL_CODES_API_ENABLED=True
      - CREDIT_CALCULATION_API_ENABLED=True
      - COMPLIANCE_REPORTING_API_ENABLED=True
    env_file:
      - minio.env
    depends_on:
      - db
    build:
      dockerfile: Dockerfile-django
      context: ./backend
    command: >
      bash -c
      "pip install -q -r requirements.txt &&
      /wfi/wait-for-it.sh -t 14400 rabbit:5672 &&
      /wfi/wait-for-it.sh -t 14400 db:5432 &&
      /wfi/wait-for-it.sh -t 14400 minio:9000 &&
      /wfi/wait-for-it.sh -t 14400 smtplogger:2500 &&
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py createcachetable &&
      supervisord"
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
  node:
    platform: linux/amd64
    build:
      dockerfile: Dockerfile
      context: ./frontend
    command: >
      bash -c
      "npm install && npm run start"
    depends_on:
      - rabbit
    ports:
      - 3000:3000
    environment:
      - RABBITMQ_VHOST=/tfrs
      - RABBITMQ_USER=rabbitmq
      - RABBITMQ_PASSWORD=rabbitmq
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
  rabbit:
    platform: linux/amd64
    image: rabbitmq:3.7-management
    hostname: "rabbit"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/tfrs
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error}]
    ports:
      - 15672:15672
      - 5672:5672
  minio:
    platform: linux/amd64
    image: minio/minio
    volumes:
      - minio_data:/export
    environment:
      MINIO_ROOT_USER: 296e92217fa3479aaf9cc9641fdb6e0a
      MINIO_ROOT_PASSWORD: 778eecb24d7743b5a1b56bbf36a29d62
    ports:
      - 9000:9000
    command: "server /export"
  smtplogger:
    platform: linux/amd64
    build:
      context: ./smtplogger
      dockerfile: Dockerfile-smtplogger
    ports:
      - 2500:2500
volumes:
  node_modules:
  postgres_data:
  postgres_keycloak_data:
  minio_data:
